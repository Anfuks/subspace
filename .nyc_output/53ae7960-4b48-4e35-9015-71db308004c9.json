{"/home/leo/Desktop/subspace.js/src/subspace.ts":{"path":"/home/leo/Desktop/subspace.js/src/subspace.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":133}},"4":{"start":{"line":5,"column":88},"end":{"line":5,"column":127}},"5":{"start":{"line":6,"column":19},"end":{"line":6,"column":40}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":115}},"7":{"start":{"line":7,"column":82},"end":{"line":7,"column":109}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":74},"end":{"line":5,"column":75}},"loc":{"start":{"line":5,"column":86},"end":{"line":5,"column":129}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":68},"end":{"line":7,"column":69}},"loc":{"start":{"line":7,"column":80},"end":{"line":7,"column":111}},"line":7}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":3},"f":{"0":0,"1":3},"b":{},"inputSourceMap":{"version":3,"file":"/home/leo/Desktop/subspace.js/src/subspace.ts","sources":["/home/leo/Desktop/subspace.js/src/subspace.ts"],"names":[],"mappings":";;;AAAA,qDAAkD;AAGzC,+FAHA,+BAAc,OAGA;AAFvB,yCAAsC;AAEb,yFAFhB,mBAAQ,OAEgB","sourcesContent":["import { SubspaceClient } from \"./subspaceClient\";\nimport { Identity } from \"./identity\";\n\nexport { SubspaceClient, Identity };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"af626d765d3872ea8198eb6f05ad88aaaeefc558","contentHash":"09d60cea412d585acb7f88641b31b81fc5c77dcfb1e9c450d4545c988a653320"},"/home/leo/Desktop/subspace.js/src/subspaceClient.ts":{"path":"/home/leo/Desktop/subspace.js/src/subspaceClient.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":23}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":45}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"8":{"start":{"line":27,"column":31},"end":{"line":27,"column":115}},"9":{"start":{"line":28,"column":25},"end":{"line":28,"column":101}},"10":{"start":{"line":29,"column":20},"end":{"line":31,"column":10}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":65}},"12":{"start":{"line":39,"column":8},"end":{"line":42,"column":11}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"14":{"start":{"line":53,"column":8},"end":{"line":53,"column":42}},"15":{"start":{"line":63,"column":24},"end":{"line":63,"column":54}},"16":{"start":{"line":64,"column":23},"end":{"line":64,"column":39}},"17":{"start":{"line":65,"column":24},"end":{"line":65,"column":58}},"18":{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},"19":{"start":{"line":68,"column":39},"end":{"line":68,"column":110}},"20":{"start":{"line":68,"column":74},"end":{"line":68,"column":109}},"21":{"start":{"line":69,"column":27},"end":{"line":69,"column":46}},"22":{"start":{"line":70,"column":29},"end":{"line":70,"column":57}},"23":{"start":{"line":71,"column":12},"end":{"line":71,"column":44}},"24":{"start":{"line":73,"column":23},"end":{"line":89,"column":10}},"25":{"start":{"line":74,"column":12},"end":{"line":88,"column":15}},"26":{"start":{"line":77,"column":16},"end":{"line":87,"column":17}},"27":{"start":{"line":78,"column":20},"end":{"line":83,"column":21}},"28":{"start":{"line":79,"column":24},"end":{"line":82,"column":25}},"29":{"start":{"line":81,"column":28},"end":{"line":81,"column":71}},"30":{"start":{"line":85,"column":21},"end":{"line":87,"column":17}},"31":{"start":{"line":86,"column":20},"end":{"line":86,"column":61}},"32":{"start":{"line":90,"column":8},"end":{"line":90,"column":22}},"33":{"start":{"line":99,"column":23},"end":{"line":99,"column":79}},"34":{"start":{"line":100,"column":8},"end":{"line":101,"column":55}},"35":{"start":{"line":101,"column":12},"end":{"line":101,"column":55}},"36":{"start":{"line":102,"column":8},"end":{"line":102,"column":64}},"37":{"start":{"line":105,"column":0},"end":{"line":105,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":47},"end":{"line":17,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":71},"end":{"line":33,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":23},"end":{"line":44,"column":5}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":22},"end":{"line":54,"column":5}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":28},"end":{"line":91,"column":5}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":68,"column":68},"end":{"line":68,"column":69}},"loc":{"start":{"line":68,"column":74},"end":{"line":68,"column":109}},"line":68},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":41},"end":{"line":73,"column":42}},"loc":{"start":{"line":73,"column":62},"end":{"line":89,"column":9}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":76,"column":38},"end":{"line":76,"column":39}},"loc":{"start":{"line":76,"column":71},"end":{"line":88,"column":13}},"line":76},"8":{"name":"(anonymous_8)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":30},"end":{"line":103,"column":5}},"line":98}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":52},"end":{"line":27,"column":114}},"type":"binary-expr","locations":[{"start":{"line":27,"column":52},"end":{"line":27,"column":71}},{"start":{"line":27,"column":75},"end":{"line":27,"column":114}}],"line":27},"1":{"loc":{"start":{"line":28,"column":46},"end":{"line":28,"column":100}},"type":"binary-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":59}},{"start":{"line":28,"column":63},"end":{"line":28,"column":100}}],"line":28},"2":{"loc":{"start":{"line":65,"column":24},"end":{"line":65,"column":58}},"type":"cond-expr","locations":[{"start":{"line":65,"column":33},"end":{"line":65,"column":48}},{"start":{"line":65,"column":51},"end":{"line":65,"column":58}}],"line":65},"3":{"loc":{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":72,"column":9}},{"start":{"line":67,"column":8},"end":{"line":72,"column":9}}],"line":67},"4":{"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":65}},"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":24}},{"start":{"line":67,"column":28},"end":{"line":67,"column":65}}],"line":67},"5":{"loc":{"start":{"line":77,"column":16},"end":{"line":87,"column":17}},"type":"if","locations":[{"start":{"line":77,"column":16},"end":{"line":87,"column":17}},{"start":{"line":77,"column":16},"end":{"line":87,"column":17}}],"line":77},"6":{"loc":{"start":{"line":79,"column":24},"end":{"line":82,"column":25}},"type":"if","locations":[{"start":{"line":79,"column":24},"end":{"line":82,"column":25}},{"start":{"line":79,"column":24},"end":{"line":82,"column":25}}],"line":79},"7":{"loc":{"start":{"line":79,"column":28},"end":{"line":80,"column":59}},"type":"binary-expr","locations":[{"start":{"line":79,"column":28},"end":{"line":79,"column":62}},{"start":{"line":80,"column":28},"end":{"line":80,"column":59}}],"line":79},"8":{"loc":{"start":{"line":85,"column":21},"end":{"line":87,"column":17}},"type":"if","locations":[{"start":{"line":85,"column":21},"end":{"line":87,"column":17}},{"start":{"line":85,"column":21},"end":{"line":87,"column":17}}],"line":85},"9":{"loc":{"start":{"line":100,"column":8},"end":{"line":101,"column":55}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":101,"column":55}},{"start":{"line":100,"column":8},"end":{"line":101,"column":55}}],"line":100}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/home/leo/Desktop/subspace.js/src/subspaceClient.ts","sources":["/home/leo/Desktop/subspace.js/src/subspaceClient.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AddressOrPair } from \"@polkadot/api/types\";\nimport type { Signer } from \"@polkadot/types/types\";\nimport { ApiPromise, WsProvider } from \"@polkadot/api\";\nimport { hexToU8a, u8aToHex } from \"@polkadot/util\";\nimport { Identity } from \"./identity\";\nimport { appSettings } from \"./config\";\n\n/**\n * @name SubspaceClient\n * @summary  The SubspaceClient class expose methods to\n * Put and Get an Object from Subspace network using the Storage API.\n */\nexport class SubspaceClient {\n  /**\n   * @name connect\n   * @summary Connect to Subspace network RPC nodes to put and get objects using the Subspace Storage API.\n   * @param identity A previously created Identity Object.\n   * @param wsRpcEndpoint Optional, by default it will connect to a public Subspace client rpc node.\n   * @param wsRpcEndpointFarmer Optional, by default it will connect to a public Subspace farmer rpc node.\n   * @return Promise<SubspaceClient>\n   */\n  public static async connect(\n    identity: Identity,\n    wsRpcEndpoint?: string,\n    wsRpcEndpointFarmer?: string\n  ): Promise<SubspaceClient> {\n    const farmerProvider = new WsProvider(\n      wsRpcEndpointFarmer || appSettings.FARMER_WS_PROVIDER\n    );\n    const provider = new WsProvider(\n      wsRpcEndpoint || appSettings.NODE_WS_PROVIDER\n    );\n    const api = await ApiPromise.create({\n      provider,\n    });\n\n    return new SubspaceClient(api, farmerProvider, identity);\n  }\n\n  private constructor(\n    private readonly api: ApiPromise,\n    private readonly farmerProvider: WsProvider,\n    private readonly identity: Identity\n  ) {}\n\n /**\n * @name disconnect\n * @summary method called to disconnect from the farmer and provider\n */\n  public async disconnect(): Promise<boolean> {\n    await Promise.all([\n      this.api.disconnect(),\n      this.farmerProvider.disconnect()]);\n    return true;\n  }\n  /**\n   * @name setSigner\n   * @summary Set the current api signer to use to submit extrinsics.\n   * @description Set an external signer which will be used to sign extrinsic when account passed in is not KeyringPair\n   * @param signer\n   * @return boolean\n   */\n  public setSigner(signer: Signer): void {\n    return this.api.setSigner(signer);\n  }\n\n  /**\n   * @name putObject\n   * @summary Using a keypair from Identity Object, submit an extrinsic using objectStore module.\n   * @param object an Uint8Array that contains the data to store.\n   * @return Promise<string> If the Object was successfully stored it return the objectId.\n   * objectId can be used to retrieve the data with getObject method.\n   */\n  public async putObject(object: Uint8Array): Promise<string> {\n    const keyPair = this.identity.getKeyringPair();\n    const locked: boolean = keyPair.isLocked;\n    const account: AddressOrPair = locked ? keyPair.address : keyPair;\n    // Run only if the keyPair was loaded from extension\n    if (keyPair.meta && keyPair.meta.source === \"polkadot-js\") {\n      const { web3FromSource } = await import(\"@polkadot/extension-dapp\");\n      const source = keyPair.meta.source;\n      const injected = await web3FromSource(source);\n      this.setSigner(injected.signer);\n    }\n    const result = await new Promise<string>((resolve, reject) => {\n      this.api.tx.objectStore\n        .put(u8aToHex(object))\n        .signAndSend(account, ({ status, events, isError }) => {\n          if (status.isInBlock) {\n            for (const { event } of events) {\n              if (\n                event.method === \"ObjectSubmitted\" &&\n                event.section === \"objectStore\"\n              ) {\n                resolve(event.data[1].toString().slice(2));\n              }\n            }\n          } else if (isError) {\n            reject(new Error(`isError: ${isError}`));\n          }\n        });\n    });\n    return result;\n  }\n\n  /**\n   * @name getObject\n   * @summary Find an Object in the objectStore, if exists return the Object data.\n   * @param objectId An objectId created from putObject used to find and return the Object data.\n   * @return Promise<Uint8Array> If the Object was found it return the Object data.\n   */\n  public async getObject(objectId: string): Promise<Uint8Array> {\n    const result = await this.farmerProvider.send(\"findObject\", [objectId])\n    if (result) return (hexToU8a(result.data));\n    throw new Error(`Object with id ${objectId} not found`);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ee86265567f5369c14acd59e5d4f16d690070dc9","contentHash":"807c487f2d28cd2f53bd174d93ad265fe898249225b77dc035dd32c6fb096ec1"},"/home/leo/Desktop/subspace.js/src/config/index.ts":{"path":"/home/leo/Desktop/subspace.js/src/config/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":80}},"2":{"start":{"line":6,"column":20},"end":{"line":10,"column":1}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"4":{"start":{"line":12,"column":24},"end":{"line":15,"column":1}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"6":{"start":{"line":17,"column":23},"end":{"line":20,"column":1}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/leo/Desktop/subspace.js/src/config/index.ts","sources":["/home/leo/Desktop/subspace.js/src/config/index.ts"],"names":[],"mappings":";;;AAGA,mBAAmB;AACnB,gGAAgG;AAChG,MAAM,WAAW,GAAG;IAClB,QAAQ,EAAE,2BAA2B;IACrC,gBAAgB,EAAE,qBAAqB;IACvC,kBAAkB,EAAE,qBAAqB;CAC1C,CAAC;AAYO,kCAAW;AAVpB,MAAM,eAAe,GAAwB;IAC3C,UAAU,EAAE,IAAI;IAChB,WAAW,EAAE,CAAC,SAAS,CAAC;CACzB,CAAC;AAOoB,0CAAe;AALrC,MAAM,cAAc,GAAmB;IACrC,UAAU,EAAE,IAAI;IAChB,IAAI,EAAE,SAAS;CAChB,CAAC;AAEqC,wCAAc","sourcesContent":["import { Web3AccountsOptions } from \"@polkadot/extension-inject/types\";\nimport { KeyringOptions } from \"@polkadot/keyring/types\";\n\n// Default settings\n// NODE_WS_PROVIDER and FARMER_WS_PROVIDER are overridden from the SubspaceClient.connect method\nconst appSettings = {\n  APP_NAME: \"Subspace.js | Storage API\",\n  NODE_WS_PROVIDER: \"ws://localhost:9944\",\n  FARMER_WS_PROVIDER: \"ws://localhost:9955\",\n};\n\nconst accountSettings: Web3AccountsOptions = {\n  ss58Format: 2254,\n  accountType: [\"sr25519\"],\n};\n\nconst keyringOptions: KeyringOptions = {\n  ss58Format: 2254,\n  type: \"sr25519\",\n};\n\nexport { appSettings, accountSettings, keyringOptions };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"267591bbd0b90e2afede8842367eec04a9ee6b60","contentHash":"a37466cb210e4c26bb19f6d190dba11ee3b66065562766397b74273f73687d3e"},"/home/leo/Desktop/subspace.js/src/identity.ts":{"path":"/home/leo/Desktop/subspace.js/src/identity.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":31}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":39}},"7":{"start":{"line":40,"column":8},"end":{"line":63,"column":9}},"8":{"start":{"line":42,"column":49},"end":{"line":42,"column":120}},"9":{"start":{"line":42,"column":84},"end":{"line":42,"column":119}},"10":{"start":{"line":43,"column":33},"end":{"line":46,"column":81}},"11":{"start":{"line":46,"column":19},"end":{"line":46,"column":79}},"12":{"start":{"line":46,"column":42},"end":{"line":46,"column":78}},"13":{"start":{"line":46,"column":59},"end":{"line":46,"column":72}},"14":{"start":{"line":47,"column":12},"end":{"line":48,"column":66}},"15":{"start":{"line":48,"column":16},"end":{"line":48,"column":66}},"16":{"start":{"line":49,"column":36},"end":{"line":49,"column":80}},"17":{"start":{"line":50,"column":12},"end":{"line":51,"column":58}},"18":{"start":{"line":51,"column":16},"end":{"line":51,"column":58}},"19":{"start":{"line":52,"column":28},"end":{"line":52,"column":70}},"20":{"start":{"line":53,"column":12},"end":{"line":55,"column":15}},"21":{"start":{"line":54,"column":16},"end":{"line":54,"column":54}},"22":{"start":{"line":56,"column":32},"end":{"line":58,"column":39}},"23":{"start":{"line":59,"column":12},"end":{"line":59,"column":54}},"24":{"start":{"line":62,"column":12},"end":{"line":62,"column":57}},"25":{"start":{"line":74,"column":8},"end":{"line":81,"column":9}},"26":{"start":{"line":75,"column":28},"end":{"line":75,"column":70}},"27":{"start":{"line":76,"column":32},"end":{"line":76,"column":81}},"28":{"start":{"line":77,"column":12},"end":{"line":77,"column":54}},"29":{"start":{"line":80,"column":12},"end":{"line":80,"column":56}},"30":{"start":{"line":89,"column":8},"end":{"line":89,"column":32}},"31":{"start":{"line":97,"column":8},"end":{"line":97,"column":28}},"32":{"start":{"line":100,"column":0},"end":{"line":100,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":38},"end":{"line":28,"column":5}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":35},"end":{"line":64,"column":5}},"line":39},"2":{"name":"(anonymous_2)","decl":{"start":{"line":42,"column":78},"end":{"line":42,"column":79}},"loc":{"start":{"line":42,"column":84},"end":{"line":42,"column":119}},"line":42},"3":{"name":"(anonymous_3)","decl":{"start":{"line":46,"column":13},"end":{"line":46,"column":14}},"loc":{"start":{"line":46,"column":19},"end":{"line":46,"column":79}},"line":46},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":31},"end":{"line":46,"column":32}},"loc":{"start":{"line":46,"column":42},"end":{"line":46,"column":78}},"line":46},"5":{"name":"(anonymous_5)","decl":{"start":{"line":46,"column":53},"end":{"line":46,"column":54}},"loc":{"start":{"line":46,"column":59},"end":{"line":46,"column":72}},"line":46},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":36},"end":{"line":53,"column":37}},"loc":{"start":{"line":53,"column":59},"end":{"line":55,"column":13}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":31},"end":{"line":82,"column":5}},"line":73},"8":{"name":"(anonymous_8)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":21},"end":{"line":90,"column":5}},"line":88},"9":{"name":"(anonymous_9)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":17},"end":{"line":98,"column":5}},"line":96}},"branchMap":{"0":{"loc":{"start":{"line":40,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":63,"column":9}},{"start":{"line":40,"column":8},"end":{"line":63,"column":9}}],"line":40},"1":{"loc":{"start":{"line":47,"column":12},"end":{"line":48,"column":66}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":48,"column":66}},{"start":{"line":47,"column":12},"end":{"line":48,"column":66}}],"line":47},"2":{"loc":{"start":{"line":50,"column":12},"end":{"line":51,"column":58}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":51,"column":58}},{"start":{"line":50,"column":12},"end":{"line":51,"column":58}}],"line":50},"3":{"loc":{"start":{"line":50,"column":16},"end":{"line":50,"column":64}},"type":"binary-expr","locations":[{"start":{"line":50,"column":16},"end":{"line":50,"column":32}},{"start":{"line":50,"column":36},"end":{"line":50,"column":64}}],"line":50},"4":{"loc":{"start":{"line":56,"column":32},"end":{"line":58,"column":39}},"type":"cond-expr","locations":[{"start":{"line":57,"column":18},"end":{"line":57,"column":42}},{"start":{"line":58,"column":18},"end":{"line":58,"column":39}}],"line":56},"5":{"loc":{"start":{"line":74,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":81,"column":9}},{"start":{"line":74,"column":8},"end":{"line":81,"column":9}}],"line":74}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":3,"26":3,"27":3,"28":3,"29":0,"30":2,"31":1,"32":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":3,"8":2,"9":1},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[3,0]},"inputSourceMap":{"version":3,"file":"/home/leo/Desktop/subspace.js/src/identity.ts","sources":["/home/leo/Desktop/subspace.js/src/identity.ts"],"names":[],"mappings":";;;AAAA,uDAAwD;AACxD,uCAAwC;AAExC,qCAAwE;AAExE;;;;;;;;GAQG;AACH,MAAa,QAAQ;IA0DnB;;;;;;;OAOG;IACH,YACmB,OAAgB,EAChB,WAAwB;QADxB,YAAO,GAAP,OAAO,CAAS;QAChB,gBAAW,GAAX,WAAW,CAAa;IACxC,CAAC;IApEJ;;;;;;;;;OASG;IACI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,OAA6B;QACxD,IAAI,MAAM,IAAA,6BAAe,GAAE,EAAE;YAC3B,4FAA4F;YAC5F,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,2CACnC,0BAA0B,EAC3B,CAAC;YACF,MAAM,YAAY,GAAG,MAAM,UAAU,CAAC,oBAAW,CAAC,QAAQ;YACxD,oEAAoE;YACpE,kDAAkD;YAClD,CAAC,GAAG,EAAE,CAAC,IAAI,OAAO,CAAU,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,YAAY;gBAAE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;YAErE,MAAM,eAAe,GAAG,MAAM,YAAY,CAAC,wBAAe,CAAC,CAAC;YAC5D,IAAI,CAAC,eAAe,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAEhG,MAAM,OAAO,GAAG,IAAI,aAAO,CAAC,uBAAc,CAAC,CAAC;YAC5C,eAAe,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE;gBAC5C,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,MAAM,WAAW,GAAG,OAAO;gBACzB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC1B,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAE1B,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SAC3C;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;IACH,CAAC;IACD;;;;;;;OAOG;IACI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAY;QACtC,IAAI,MAAM,IAAA,6BAAe,GAAE,EAAE;YAC3B,MAAM,OAAO,GAAG,IAAI,aAAO,CAAC,uBAAc,CAAC,CAAC;YAC5C,MAAM,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YACtE,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SAC3C;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC7C;IACH,CAAC;IAeD;;;;OAIG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACD;;;;OAIG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF;AAvFD,4BAuFC","sourcesContent":["import { cryptoWaitReady } from \"@polkadot/util-crypto\";\nimport { Keyring } from \"@polkadot/api\";\nimport { KeyringPair } from \"@polkadot/keyring/types\";\nimport { appSettings, accountSettings, keyringOptions } from \"./config\";\n\n/**\n * @name Identity\n * @summary The Identity class is used to create a keyring and keypair from different sources.\n * @example\n * - Use fromWeb3 to generate an Identity from web3Accounts.\n *    For web apps using Polkadot.js extension.\n * - Use fromUri or fromPair to generate an Identity using given parameters.\n *    For node js scripts.\n */\nexport class Identity {\n  /**\n   * @name fromWeb3\n   * @summary Creates an Identity instance from web3Accounts.\n   * @description Load and store injected accounts in a keyring object.\n   * using web3Accounts from `@polkadot/extension-dapp`.\n   * @param address Optional.\n   * If the param is present, the method will set the default keypair linked to this address.\n   * If it is not present, the method will set default keypair using the first account from web3Accounts.\n   * @return Promise<Identity>\n   */\n  public static async fromWeb3(address?: string | Uint8Array): Promise<Identity> {\n    if (await cryptoWaitReady()) {\n      // import polkadot extension methods only if web3 is available (use only in browser context)\n      const { web3Accounts, web3Enable } = await import(\n        \"@polkadot/extension-dapp\"\n      );\n      const isWeb3Enable = await web3Enable(appSettings.APP_NAME,\n        // In case the extension is still not injected in the window object.\n        // we add compatInit array to await the extension.\n        [() => new Promise<boolean>(resolve => setTimeout(() => resolve(true), 500))]);\n      if (!isWeb3Enable) throw new Error(\"Web3 not enabled or available.\");\n\n      const allWeb3Accounts = await web3Accounts(accountSettings);\n      if (!allWeb3Accounts || allWeb3Accounts.length === 0) throw new Error(\"No accounts available.\");\n\n      const keyring = new Keyring(keyringOptions);\n      allWeb3Accounts.forEach(({ address, meta }) => {\n        keyring.addFromAddress(address, meta);\n      });\n\n      const keyringPair = address\n        ? keyring.getPair(address)\n        : keyring.getPairs()[0];\n\n      return new Identity(keyring, keyringPair);\n    } else {\n      throw new Error(\"Crypto wait ready failed.\");\n    }\n  }\n  /**\n   * @name fromUri\n   * @summary Creates an Identity from a secret uri.\n   * @description SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n   * The secret can be a hex string, mnemonic phrase or a string (to be padded)\n   * @param suri Example: `//Alice///password` or a mnemonic phrase.\n   * @return Promise<Identity>\n   */\n  public static async fromUri(suri: string): Promise<Identity> {\n    if (await cryptoWaitReady()) {\n      const keyring = new Keyring(keyringOptions);\n      const keyringPair = keyring.addFromUri(suri, undefined, keyring.type);\n      return new Identity(keyring, keyringPair);\n    } else {\n      throw new Error(\"Crypto wait ready failed\");\n    }\n  }\n\n  /**\n   * @name constructor\n   * @summary Creates an Identity instance.\n   * @description Load and store injected accounts in a keyring object.\n   * @param keyring  Keyring object.\n   * @param keyringPair  KeyringPair object.\n   * @return Identity\n   */\n  private constructor(\n    private readonly keyring: Keyring,\n    private readonly keyringPair: KeyringPair\n  ) {}\n\n  /**\n   * @name getKeyringPair\n   * @summary Returns the keyringPair object.\n   * @return KeyringPair\n   */\n  public getKeyringPair(): KeyringPair {\n    return this.keyringPair;\n  }\n  /**\n   * @name getKeyring\n   * @summary Returns the keyring object.\n   * @return Keyring\n   */\n  public getKeyring(): Keyring {\n    return this.keyring;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1aa03ced324d4b7ee0cc3eb30265fe75eea21062","contentHash":"fec547e2706a77fec6977847ff9de3aadeac8eb0b7c7af50cb198d1da3842c68"}}